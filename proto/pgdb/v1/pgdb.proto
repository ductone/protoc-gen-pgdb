syntax = "proto3";

package pgdb.v1;

import "google/protobuf/descriptor.proto";

option go_package = "github.com/ductone/protoc-gen-pgdb/pgdb/v1";

// TODO(pquerna): register here
// https://github.com/protocolbuffers/protobuf/blob/master/docs/options.md
extend google.protobuf.MessageOptions {
  MessageOptions msg = 6010;

}

message MessageOptions {
  bool disabled = 1;
  message Index {
    enum IndexMethod {
      INDEX_METHOD_UNSPECIFIED = 0;
      INDEX_METHOD_BTREE = 1;
      INDEX_METHOD_GIN = 2;
      // Requires loading of BTREE_GIN extension:
      // https://www.postgresql.org/docs/current/btree-gin.html
      INDEX_METHOD_BTREE_GIN = 3;
      INDEX_METHOD_HNSW_COSINE = 4;
    }
    string name = 1;
    IndexMethod method = 2;
    repeated string columns = 3;
    // used to indicate the index by this name can be dropped
    bool dropped = 4;
    // generates a deleted_at IS NULL partial index
    bool partial_deleted_at_is_null = 5;
  }
  repeated Index indexes = 2;
  // defaults to `tenant_id`.  Must be set if an object does not have a
  // `tenant_id` field.
  string tenant_id_field = 3;

  // if this message is only used in nested messages, a subset of methods
  // will be generated.
  bool nested_only = 4;

  // if this message is used then we create a partitioned table and partition by
  // tenant_id.
  bool partitioned = 5;

  // if this message is used then we create a partitioned table and partition by
  // created_at.
  bool partitioned_by_created_at = 7;

  // if this message is used then we create a partitioned table and partition by
  // a date field.
  enum PartitionedByDateRange {
    PARTITIONED_BY_DATE_RANGE_UNSPECIFIED = 0;
    PARTITIONED_BY_DATE_RANGE_DAY = 1;
    PARTITIONED_BY_DATE_RANGE_MONTH = 2;
    PARTITIONED_BY_DATE_RANGE_YEAR = 3;
  }
  PartitionedByDateRange partitioned_by_date_range = 8;

  // if this message is used then we create a partitioned table and partition by
  // event_id.
  string partitioned_by_ksuid_field_name = 9;

  message Stat {
    enum StatsKind {
      STATS_KIND_UNSPECIFIED = 0;
      STATS_KIND_NDISTINCT = 1;
      STATS_KIND_DEPENDENCIES = 2;
      STATS_KIND_MCV = 3;
    }
    string name = 1;
    repeated StatsKind kinds = 2;
    repeated string columns = 3;
    // used to indicate the stats by this name can be dropped
    bool dropped = 4;
  }
  repeated Stat stats = 6;
  bool use_pkskv2_column = 10; // determines whether to add the pkskv2 column
}

extend google.protobuf.FieldOptions {
  FieldOptions options = 6010;
}

message FieldOptions {
  enum FullTextType {
    FULL_TEXT_TYPE_UNSPECIFIED = 0;
    FULL_TEXT_TYPE_EXACT = 1;
    // Best used for short display names
    FULL_TEXT_TYPE_ENGLISH = 2;
    // Removes short-tokens (<3 chars), useful for descirptions
    FULL_TEXT_TYPE_ENGLISH_LONG = 3;
  }
  enum FullTextWeight {
    FULL_TEXT_WEIGHT_UNSPECIFIED = 0;
    FULL_TEXT_WEIGHT_LOW = 1;
    FULL_TEXT_WEIGHT_MED = 2;
    FULL_TEXT_WEIGHT_HIGH = 3;
  }
  FullTextType full_text_type = 1;
  FullTextWeight full_text_weight = 2;

  enum MessageBehavior {
    MESSAGE_BEHAVIOR_UNSPECIFIED = 0;
    MESSAGE_BEHAVIOR_EXPAND = 1;
    MESSAGE_BEHAVIOR_OMIT = 2;
    MESSAGE_BEHAVIOR_JSONB = 3;

    // Must be a repeated sub-Message which contains a model id and a repeated float vector.
    MESSAGE_BEHAVIOR_VECTOR = 4;

    // Must be a string representation of an IP address.
    MESSAGE_BEHAVIOR_INET_ADDR = 5;
  }
  MessageBehavior message_behavior = 3;
  reserved 4;
  reserved "vector_size";

  // Specifies the collation for the field in PostgreSQL
  string collation = 5;
}

extend google.protobuf.EnumValueOptions {
  EnumValueOptions enum = 6010;
}

message EnumValueOptions {
  // vector size options
  int32 vector_size = 1;
}

